version: '3.7'

services:

  supplyit-users:
    image: users
    build:
      context: ./services/users
      dockerfile: Dockerfile
    volumes:
      - './services/users:/usr/src/app'
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@supplyit-users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@supplyit-users-db:5432/users_test
      - SECRET_KEY=my_precious
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - supplyit-users-db
      - redis

  supplyit-users-db:
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - 80:80
    depends_on:
      - supplyit-users
      - client

  client:
    build:
      context: ./services/client
      dockerfile: Dockerfile
    volumes:
      - './services/client:/usr/src/app'
      - './services/client/node_modules:/usr/src/app/node_modules'
    ports:
      - 3007:3000
    environment:
      - NODE_ENV=development
      - REACT_APP_USERS_SERVICE_URL=${REACT_APP_USERS_SERVICE_URL}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - supplyit-users

  swagger:
    build:
      context: ./services/swagger
      dockerfile: Dockerfile
    volumes:
      - './services/swagger/swagger.yml:/usr/share/nginx/html/swagger.yml'
    ports:
      - 3008:8080
    environment:
      - URL=swagger.yml
    depends_on:
      - supplyit-users

  celery:
    image: users
    volumes:
      - './services/users:/usr/src/app'
    command: celery -A project.utils.tasks worker --loglevel=info
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - MAILGUN_API_KEY=${MAILGUN_API_KEY}
      - MAILGUN_DOMAIN=${MAILGUN_DOMAIN}
      - FROM_TITLE=SUPPLYIT
    depends_on:
      - supplyit-users
      - redis

  celery-monitor:
    image: users
    ports:
      - 5555:5555
    command:  flower -A project.utils.tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - supplyit-users
      - redis

  redis:
    build:
      context: ./services/redis
      dockerfile: Dockerfile

  products:
    build:
      context: ./services/products
      dockerfile: Dockerfile
    volumes:
      - './services/products:/usr/src/app'
    ports:
      - 5002:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - USERS_SERVICE_URL=http://supplyit-users:5000
      - SECRET_KEY=my_precious
      - DATABASE_URL=postgres://postgres:postgres@products-db:5432/products_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@products-db:5432/products_test
      - MAILSLURP_API_KEY=${MAILSLURP_API_KEY}
    depends_on:
      - supplyit-users
      - products-db

  products-db:
    build:
      context: ./services/products/db
      dockerfile: Dockerfile
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
